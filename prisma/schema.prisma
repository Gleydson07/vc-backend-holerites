generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StaffRole {
  ADMIN   @map("admin")
  MANAGER @map("manager")
}

model Tenant {
  id         String    @id @default(uuid())
  name       String    @map("name")
  socialName String    @map("social_name")
  cnpj       String    @unique @map("cnpj")
  isActive   Boolean   @default(true) @map("is_active")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime? @updatedAt @map("updated_at")

  employees Employee[]
  User      User[]
  Staff     Staff[]

  @@map("tenants")
}

model User {
  id                 String   @id @default(uuid())
  tenantId           String   @map("tenant_id")
  username           String   @map("username")
  passwordHash       String   @map("password_hash")
  mustChangePassword Boolean? @default(true) @map("must_change_password")
  isActive           Boolean  @default(true) @map("is_active")
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")

  staff     Staff[]
  employees Employee[]

  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@unique([username, tenantId], name: "uq_user_username_tenant")
  @@unique([id, tenantId], name: "uq_user_username_id_tenant")
  @@index([tenantId, isActive], name: "idx_user_tenant_id_active")
  @@map("users")
}

model Employee {
  id        String   @id @default(uuid())
  tenantId  String   @map("tenant_id")
  userId    String?  @map("user_id")
  cpf       String   @map("cpf")
  fullName  String   @map("full_name")
  email     String?  @map("email")
  phone     String?  @map("phone")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  tenant Tenant @relation(fields: [tenantId], references: [id])
  user   User?  @relation(fields: [userId], references: [id])

  @@unique([cpf, tenantId], name: "uq_employee_cpf_tenant")
  @@index([tenantId, userId], name: "idx_employee_tenant_id_user_id")
  @@index([tenantId, fullName], name: "idx_employee_tenant_id_full_name")
  @@map("employees")
}

model Staff {
  id        String    @id @default(uuid())
  tenantId  String    @map("tenant_id")
  userId    String    @map("user_id")
  cpf       String    @map("cpf")
  role      StaffRole @map("role")
  fullName  String    @map("full_name")
  email     String?   @map("email")
  phone     String?   @map("phone")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  tenant Tenant @relation(fields: [tenantId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@unique([tenantId, userId], name: "uq_staff_tenant_id_user_id")
  @@index([tenantId, role], name: "idx_staff_tenant_id_role")
  @@map("staff")
}
